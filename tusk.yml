tasks:
  setup:
    usage: Bootstrap the project dependencies
    description: |
      This project uses `pipenv` to manage python virtualenvs and dependencies.
      Bootstrap will install the latest version of pipenv and run `pipenv install`,
      installing all python dependencies after.
    run:
      - when:
          os: darwin
        command:
          - brew install python3
          - brew cask install docker
          - brew install docker-machine-completion
      - when:
          os: linux
        set-environment:
          LC_ALL: C.UTF-8
          LANG: C.UTF-8
      - command:
        - pip3 install --upgrade pipenv
        - pipenv install --dev
  docker:
    usage: Execute docker commands
    description: |
      Used to build, run and destroy test containers. If a proper tag is passed
      it can be used to build a production container.
    options:
      action:
        usage: build, run, destroy
        required: true
      tag:
        usage: docker tag
        default: latest
    run:
      - when:
          equal: {action: build}
        command: docker build -t plex_notifier:${tag} .
      - when:
          equal: {action: run}
        command: docker run --env-file ${HOME}/.plex_envs -it plex_notifier:${tag} bash
      - when:
          equal: {action: destroy}
        command: docker rmi plex_notifier:${tag} -f
  check:
    usage: Executes test suite
    description: |
      Can execute the entire test suite (pytest, pylint) or if
      specified just pytest or pylint independently.
    options:
      lint:
        usage: execute pylint only
        type: bool
        default: false
      test:
        usage: execute pytest only
        type: bool
        default: false
    run:
      - when:
          equal: {lint: true}
        command:
          - pipenv run pylint main plex_notifier
      - when:
          equal: {test: true}
        command: pipenv run pytest
      - when:
          equal: {lint: false}
          equal: {test: false}
        command:
          - pipenv run pytest
          - pipenv run pylint main plex_notifier
  flake:
    usage: Run flake8 linting
    description: |
      This will run flake8. It will remain it's own task until such time as it
      is fully configured and passing.
    run:
      - pipenv run flake8
  notify:
    usage: Run plex_notifier app
    description: |
      This will run the plex_notifier app with the optiosn provided.
    options:
      schedule:
        usage: schedule plex_notifier to run via cron
        type: bool
        default: false
      cancel:
        usage: cancel the plex_notifier cron job
        type: bool
        default: false
    run:
      - when:
          equal: {schedule: true}
        command: pipenv run python main.py --schedule
      - when:
          equal: {cancel: true}
        command: pipenv run python main.py --cancel
      - when:
          equal: {schedule: false}
          equal: {cancel: false}
        command: pipenv run python main.py
