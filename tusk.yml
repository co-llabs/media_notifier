tasks:
  bootstrap:
    usage: Bootstrap the project dependencies
    description: |
      This project uses `pipenv` to manage python virtualenvs and dependencies.
      Bootstrap will install the latest version of pipenv and run `pipenv install`,
      installing all python dependencies after.
    run:
      - pip3 install --upgrade pipenv
      - pipenv install --dev
  docker_build:
    usage: Build Docker container
    description: |
      Builds a Docker container with the `latest` tag for testing changes to the
      Dockerfile
    options:
      tag:
        usage: Docker tag
        default: latest
    run:
      - docker build -t plex_notifier:${tag} .
  docker_run:
    usage: Run Docker container
    description: |
      Runs the built Docker container interactively for testing and
      troubleshooting. Assumes the `.plex_envs` file is in the home directory
    options:
      tag:
        usage: Docker tag
        default: latest
    run:
      - docker run --env-file ~/.plex_envs -it plex_notifier:${tag} bash
  docker_delete:
    usage: Removes Docker container
    description: |
      Removes the Docker container built for testing from the machine
    options:
      tag:
        usage: Docker tag
        default: latest
    run:
      - docker rmi plex_notifier:${tag} -f
  test:
    usage: Executes pytest
    description: |
      Executes `pytest`
    run:
      - pipenv run pytest
  lint:
    usage: Executes pylint
    description: |
      Executes `pylint`
    run:
      - pipenv run pylint main schedule plex_notifier
  test_suite:
    usage: Execute test suite
    description: |
      Executes `pylint` and `pytest`
    run:
      - pipenv run pytest
      - pipenv run pylint main schedule plex_notifier
  run:
    usage: Run the app
    description: |
      Run the app
    run:
      - pipenv run python main.py
